// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");

function Select$Input(Props) {
  var value = Props.value;
  var onBlur = Props.onBlur;
  var onClick = Props.onClick;
  var onChange = Props.onChange;
  return React.createElement("input", {
              className: "bg-red-100 outline-none w-full cursor-pointer focus:cursor-text",
              placeholder: "select",
              type: "text",
              value: value,
              onBlur: onBlur,
              onChange: onChange,
              onClick: onClick
            });
}

var Input = /* module */[/* make */Select$Input];

function Select$Menu$Item(Props) {
  var value = Props.value;
  var onClick = Props.onClick;
  return React.createElement("div", {
              className: "cursor-pointer hover:bg-blue-300",
              onClick: onClick
            }, value);
}

var Item = /* module */[/* make */Select$Menu$Item];

function Select$Menu(Props) {
  var children = Props.children;
  var hide = Props.hide;
  if (hide) {
    return React.createElement("div", {
                className: "absolute bg-green-200 w-full"
              }, children);
  } else {
    return null;
  }
}

var Menu = /* module */[
  /* Item */Item,
  /* make */Select$Menu
];

function Select$Box(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "inline-block relative bg-green-100 w-40"
            }, children);
}

var Box = /* module */[/* make */Select$Box];

function Select$Container(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "block w-full"
            }, children);
}

var Container = /* module */[/* make */Select$Container];

function Select(Props) {
  var values = Props.values;
  var onChange = Props.onChange;
  var match = React.useState((function () {
          return false;
        }));
  var toggleActive = match[1];
  var active = match[0];
  var match$1 = React.useState((function () {
          return "";
        }));
  var changeValue = match$1[1];
  var value = match$1[0];
  var handleClick = function (_e) {
    Curry._1(toggleActive, (function (active) {
            return !active;
          }));
    return Curry._1(changeValue, (function (value) {
                  if (active) {
                    return value;
                  } else {
                    return "";
                  }
                }));
  };
  var handleChange = function (e) {
    return Curry._1(changeValue, e.target.value);
  };
  var handleBlur = function (_e) {
    setTimeout((function (param) {
            return Curry._1(toggleActive, (function (param) {
                          return false;
                        }));
          }), 200);
    return /* () */0;
  };
  return React.createElement(Select$Box, {
              children: React.createElement(Select$Container, {
                    children: null
                  }, React.createElement(Select$Input, {
                        value: value,
                        onBlur: handleBlur,
                        onClick: handleClick,
                        onChange: handleChange
                      }), React.createElement(Select$Menu, {
                        children: $$Array.of_list(List.mapi((function (i, x) {
                                    return React.createElement(Select$Menu$Item, {
                                                value: x,
                                                onClick: (function (_e) {
                                                    Curry._1(changeValue, (function (param) {
                                                            return x;
                                                          }));
                                                    return Curry._1(onChange, x);
                                                  }),
                                                key: String(i)
                                              });
                                  }), List.filter((function (param) {
                                          return param.startsWith(value);
                                        }))(values))),
                        hide: active
                      }))
            });
}

var make = Select;

exports.Input = Input;
exports.Menu = Menu;
exports.Box = Box;
exports.Container = Container;
exports.make = make;
/* react Not a pure module */

// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Planet$ReactHooksTemplate = require("./Planet.bs.js");
var Select$ReactHooksTemplate = require("./Select.bs.js");
var Vehicle$ReactHooksTemplate = require("./Vehicle.bs.js");

function App$FindFalcone(Props) {
  return React.createElement("button", {
              className: "outline-none block"
            }, "Find Falcone");
}

var FindFalcone = /* module */[/* make */App$FindFalcone];

function App$LaunchPad(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "flex-1"
            }, children);
}

var LaunchPad = /* module */[/* make */App$LaunchPad];

function App$Lengaburu(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "flex items-start"
            }, children);
}

var Lengaburu = /* module */[/* make */App$Lengaburu];

function updateArray(value, index, arr) {
  Caml_array.caml_array_set(arr, index, value);
  return arr;
}

function App(Props) {
  var match = React.useState((function () {
          return /* [] */0;
        }));
  var setVehicles = match[1];
  var vehicles = match[0];
  var match$1 = React.useState((function () {
          return /* [] */0;
        }));
  var setPlanets = match$1[1];
  var planets = match$1[0];
  var match$2 = React.useState((function () {
          return /* :: */[
                  undefined,
                  /* :: */[
                    undefined,
                    /* :: */[
                      undefined,
                      /* :: */[
                        undefined,
                        /* [] */0
                      ]
                    ]
                  ]
                ];
        }));
  var setMission = match$2[1];
  var missions = match$2[0];
  React.useEffect((function () {
          console.log("didMount");
          Planet$ReactHooksTemplate.Api[/* fetchPlanets */0](/* () */0).then((function (json) {
                  return Promise.resolve(Curry._1(setPlanets, (function (param) {
                                    return json;
                                  })));
                }));
          Vehicle$ReactHooksTemplate.Api[/* fetchVehicles */0](/* () */0).then((function (json) {
                  return Promise.resolve(Curry._1(setVehicles, (function (param) {
                                    return json;
                                  })));
                }));
          return (function (param) {
                    return /* () */0;
                  });
        }), ([]));
  console.log("render");
  return React.createElement(App$Lengaburu, {
              children: null
            }, $$Array.of_list(List.mapi((function (i, mission) {
                        var values = List.map((function (planet) {
                                return planet[/* name */0];
                              }), planets);
                        return React.createElement(App$LaunchPad, {
                                    children: null,
                                    key: String(i)
                                  }, React.createElement(Select$ReactHooksTemplate.make, {
                                        values: values,
                                        onChange: (function (value) {
                                            var value$1 = value;
                                            var i$1 = i;
                                            var values = $$Array.to_list(updateArray(/* record */[
                                                      /* vehicle */"",
                                                      /* planet */value$1
                                                    ], i$1, $$Array.of_list(missions)));
                                            Curry._1(setMission, (function (param) {
                                                    return values;
                                                  }));
                                            return /* () */0;
                                          })
                                      }), mission !== undefined ? $$Array.of_list(List.mapi((function (i, vehicle) {
                                                return React.createElement(Vehicle$ReactHooksTemplate.make, {
                                                            data: vehicle,
                                                            key: String(i)
                                                          });
                                              }), vehicles)) : null);
                      }), missions)), React.createElement(App$FindFalcone, { }));
}

var make = App;

exports.FindFalcone = FindFalcone;
exports.LaunchPad = LaunchPad;
exports.Lengaburu = Lengaburu;
exports.updateArray = updateArray;
exports.make = make;
/* react Not a pure module */
